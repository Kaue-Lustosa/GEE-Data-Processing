/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var imageVisParam = {"opacity":1,"bands":["NDVI"],"max":0.7,"palette":["00b8ff","9fff04","78e600","34b300","007209"]},
    imageVisParam2 = {"opacity":1,"bands":["slope"],"max":45,"palette":["0000ff","00ffff","ffff00","ff0000","ffffff"]},
    imageVisParam3 = {"opacity":1,"bands":["NDVI","slope","B3"],"gamma":3.714},
    table = ee.FeatureCollection("projects/ee-kauelustosamorgadoufrn/assets/RN_mesorregioes_2022");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
Map.setCenter(-36, -6, 8);

//---- recorte da área de interesse ----//
var regiaoOeste = table.filter(ee.Filter.eq('NM_MESO', 'Oeste Potiguar'));
var regiaoCentral = table.filter(ee.Filter.eq('NM_MESO', 'Central Potiguar'));
var regiaoAgreste = table.filter(ee.Filter.eq('NM_MESO', 'Agreste Potiguar'));
var regiaoLeste = table.filter(ee.Filter.eq('NM_MESO', 'Leste Potiguar'));

Map.addLayer(table, {}, 'mesorregiões', false);
Map.addLayer(regiaoOeste, {}, 'região oeste', false);
Map.addLayer(regiaoCentral, {}, 'região central', false);
Map.addLayer(regiaoAgreste, {}, 'região agreste', false);
Map.addLayer(regiaoLeste, {}, 'região leste', false);

//---- criação do recorte do RN ----//
var admin = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level1");
var rn = admin.filter(ee.Filter.eq('ADM1_CODE', 684));

//---- função para mascarar as nuvens ----//
function maskS2clouds(image) {
  var qa = image.select('QA60').clip(rn);

  //---- bits 10 e 11 são nuvens e cirrus, respectivamente ----//
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;

  //---- ambas as flags devem ser setadas para zero, indicando clear conditions ----//
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));

  return image.updateMask(mask).divide(10000);
}

//---- adquirindo coleção de imagem da Copernicus ----//
var image = ee.ImageCollection('COPERNICUS/S2')
                  .filterDate('2023-01-01', '2023-02-03')
                  //---- Pré-filtrar para ter menos pixels nublados ----//
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
                  .filterBounds(rn)
                  .map(maskS2clouds)
                  .median();

//---- cálculo do NDVI ----//
var ndvi = image.expression('(nir - red) / (nir + red)', {
  'nir':image.select('B8'),
  'red':image.select('B4'),
}).rename('NDVI');

//---- reduzindo a opacidade para futuros cálculos de soma ----//
var reduced_opacity_ndvi = image.expression('ndvi * 1', {
  'ndvi':ndvi,
}).rename('NDVI');
var ndvi_image = image.addBands(reduced_opacity_ndvi);

//---- clipando a imagem NDVI às regiões do RN ----//
var clippedNdvi = ndvi_image.clip(rn);
var oesteNdvi = ndvi_image.clip(regiaoOeste);
var centralNdvi = ndvi_image.clip(regiaoCentral);
var agresteNdvi = ndvi_image.clip(regiaoAgreste);
var lesteNdvi = ndvi_image.clip(regiaoLeste);

//---- elevation collection ----//
var dataset = ee.ImageCollection('JAXA/ALOS/AW3D30/V3_2');
var elevation = dataset.select('DSM');
// Reproject an image mosaic using a projection from one of the image tiles,
// rather than using the default projection returned by .mosaic().
var proj = elevation.first().select(0).projection();
var slopeReprojected = ee.Terrain.slope(elevation.mosaic().setDefaultProjection(proj));
var clippedSlope = slopeReprojected.clip(rn);

//---- definindo as classes do NDVI ----//
var ndviClasses = [
  {name: 'Água', range: [0.0, 0.1], color: 'blue'},
  {name: 'Floresta', range: [0.2, 0.5], color: 'green'},
  {name: 'Pastagem', range: [0.5, 0.7], color: 'yellow'},
  {name: 'Solo exposto', range: [0.7, 1.0], color: 'brown'}
];

//---- definindo classes de declividade ----//
var slopeClasses = [
  {name: 'Plano', range: [0, 5], color: 'lightgreen'},
  {name: 'Suave', range: [5, 15], color: 'yellow'},
  {name: 'Moderado', range: [15, 30], color: 'orange'},
  {name: 'Íngreme', range: [30, 90], color: 'red'}
];

//---- combinando as imagens em uma só ----//
var combinedImageOeste = oesteNdvi.addBands(clippedSlope);
var combinedImageCentral = centralNdvi.addBands(clippedSlope);
var combinedImageAgreste = agresteNdvi.addBands(clippedSlope);
var combinedImageLeste = lesteNdvi.addBands(clippedSlope);

//---- adicionando camadas ao mapa ----//
Map.addLayer(rn, {}, 'RN polygon', false);
Map.addLayer(clippedNdvi, imageVisParam, 'NDVI', false);
Map.addLayer(clippedSlope, imageVisParam2, 'Slope', false);
Map.addLayer(combinedImageOeste, imageVisParam3, 'CI oeste');
Map.addLayer(combinedImageCentral, imageVisParam3, 'CI central');
Map.addLayer(combinedImageAgreste, imageVisParam3, 'CI agreste');
Map.addLayer(combinedImageLeste, imageVisParam3, 'CI leste');

//---- exportando a imagem resultante ----//
/*Export.image.toDrive({
  image: combinedImage,
  description: 'ndvi_slope_combined',
  folder: 'EE_exports',
  region: rn,
  scale: 30,
  maxPixels: 1e13
});*/